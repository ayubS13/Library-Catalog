/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LibraryPackage;

/**
 *
 * @author Ayub
 */
import java.awt.event.KeyEvent;
import java.util.*;
import javax.swing.JOptionPane;
import java.io.*;

public class LibrarianLogin extends javax.swing.JFrame {
    private static Librarian headNode;
    private static Librarian tailNode;
   
    

    /**
     * Creates new form StartPage
     */
    public LibrarianLogin() {
        initComponents();
        readFile();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JTextField();
        login = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        createLib = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin Login");
        setBackground(new java.awt.Color(0, 255, 204));
        setMinimumSize(new java.awt.Dimension(800, 480));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 480));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Username:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Password:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Click Here to Create Account");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 370, -1, 40));

        usernameField.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        getContentPane().add(usernameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 150, 210, 40));

        passwordField.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                passwordFieldKeyTyped(evt);
            }
        });
        getContentPane().add(passwordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 210, 210, 40));

        login.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        login.setText("Login");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });
        getContentPane().add(login, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 270, 110, 30));

        cancel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cancel.setText("Exit");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        getContentPane().add(cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 270, 110, 30));

        createLib.setText("Create New Admin");
        createLib.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createLibActionPerformed(evt);
            }
        });
        getContentPane().add(createLib, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 410, 140, 30));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 42)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Admin Login");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, -1, 50));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LibraryPackage/Bookshelves-Background2.jpg"))); // NOI18N
        jLabel4.setMaximumSize(new java.awt.Dimension(800, 480));
        jLabel4.setMinimumSize(new java.awt.Dimension(800, 480));
        jLabel4.setPreferredSize(new java.awt.Dimension(800, 480));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 480));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    //reads the file and fills the array of Admins with existing admins
    // or creates a default admin if the file is missing
    private void readFile(){
        boolean librarianfound = false;
        File temp = new File("Librarian Info");
        if(temp.exists()== true){
            //if the file exists, read it it into the arraylist of users
            try
            {
                FileInputStream fis = new FileInputStream("Librarian Info");
                ObjectInputStream ois = new ObjectInputStream(fis);
                headNode = (Librarian) ois.readObject();
                Librarian currentNode = headNode;
                int nodeNum = -1;
                if(headNode != null){
                    do{
                        nodeNum++;
                        if (currentNode.nextNode == null){
                            tailNode = currentNode;
                        }
                        currentNode = currentNode.nextNode;
                    }while(currentNode != null);
                }
                ois.close();
                fis.close();
            }catch(IOException ioe){
                ioe.printStackTrace();
                return;
            }catch(ClassNotFoundException c){
                System.out.println("Class not found");
                c.printStackTrace();
                return;
            }
        }else{ //else make a default user which is me
            Librarian newNode = new Librarian("Anthony", "Nates",42, "nate42", 123456, "571-239-7190", null); //if the file isn't there
            
            if(headNode == null){
                headNode = newNode;
            }else{
                tailNode.nextNode = newNode;
            }
            tailNode = newNode;
            /*
            for(int i = 0; i< list.size(); i++){//loop checks if I'm in the arraylsit being read from file
                if(list.get(i) != null){
                    //list.add( new Librarian("Anthony", "Nates", "nate42", 123456, "571-239-7190")); //the default admin (me)
                    if(list.get(i).first.equalsIgnoreCase("Anthony") || list.get(i).last.equalsIgnoreCase("Nates") || list.get(i).password == 123456){
                        librarianfound = true;
                        System.out.println(list.size());
                    }
                }
            }
            if(librarianfound == false){
                list.add( new Librarian("Anthony", "Nates",42, "nate42", 123456, "571-239-7190"));
            }*/
        }
    }
    
    //takes the user or login back to the start page
    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // closes the admin login screen and takes you back to the login homepage of the user
        String filename = "Librarian Info";
        try {
            FileOutputStream fileStream = new FileOutputStream(filename);
            ObjectOutputStream saveFile = new ObjectOutputStream(fileStream);
            saveFile.writeObject(headNode);//when you save the headNode it saves the entire linked list				
            saveFile.close();
	}catch(Exception x){};
        
        System.exit(0);
    }//GEN-LAST:event_cancelActionPerformed

    /*
    Precondition: The librarian is at the librarian login page
    Postcondition: the librarian can successfully on to the database in his account
    Activity: takes the librarian's input password and username, loops through the existing librarian's to match
              which one, if it finds it, it logs in, if the 
    */
    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        // TODO add your handling code here:
        String s = passwordField.getText();//get the password as a string
        int password = 0;
        if(!(s.equals(""))){//error check if it's empty it wont parse int
                password = Integer.parseInt(s); //turns the string into a number
            }//turn it in to a number
        String userN = usernameField.getText();//get the usename
        
        Librarian temp;
        boolean found = false;
        Librarian currentNode = headNode;
        if(headNode != null){//always checks if the headNode is not empty before going anyfurther
            do{
                System.out.println("came down here");
                if(currentNode.userName.equals(userN) && currentNode.password == password){
                        temp = currentNode;
                        found = true;
                        
                        //output to librarian file before proceeding anyfuther
                        try{
                            FileOutputStream fos= new FileOutputStream("Librarian Info");
                            ObjectOutputStream oos= new ObjectOutputStream(fos);
                            oos.writeObject(headNode); //this is a way to store the arraylist in a file
                            oos.close();
                            fos.close();
                        }catch(IOException ioe){
                            ioe.printStackTrace();
                        }
                        
                        this.setVisible(false);
                        LibrarianHomepage home = new LibrarianHomepage(temp, headNode, tailNode);
                        home.setVisible(true);
                   }
                   currentNode = currentNode.nextNode;
                }while(currentNode != null);    
            }
        
        if(s.equals("") || userN.equals("")){//if the username or the password fieldis blank
            JOptionPane.showMessageDialog(null, "Please fill in the required fields");   
        }else if(found == false){
            JOptionPane.showMessageDialog(null, "You are not in the system.");
        }        
    }//GEN-LAST:event_loginActionPerformed

    //restricts the input in the password text field to only numbers
    private void passwordFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyTyped
        // This allows for only numerical inputs
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE){
            evt.consume();
        }
    }//GEN-LAST:event_passwordFieldKeyTyped

    private void createLibActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createLibActionPerformed
        CreateUser crt = new CreateUser("librarian");
        this.setVisible(false);
        crt.setVisible(true);
    }//GEN-LAST:event_createLibActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LibrarianLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LibrarianLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LibrarianLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LibrarianLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LibrarianLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JButton createLib;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton login;
    private javax.swing.JTextField passwordField;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
